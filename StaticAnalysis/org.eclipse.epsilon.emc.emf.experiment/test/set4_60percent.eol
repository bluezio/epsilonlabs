model Core driver EMF {nsuri = "org.amma.dsl.jdt.core"};
model DOM driver EMF {nsuri = "org.amma.dsl.jdt.dom"};
model PrimitiveTypes driver EMF {nsuri = "org.amma.dsl.jdt.primitiveTypes"};

var throwStatement = ThrowStatement.all.first;
var methodRef = MethodRef.all.first;
var iMethod = IMethod.all.first;
var whileStatement = WhileStatement.all.first;
var iInitializer = IInitializer.all.first;
var typeParameter = TypeParameter.all.first;
var methodRefParameter = MethodRefParameter.all.first;
var tryStatement = TryStatement.all.first;
var methodInvocation = MethodInvocation.all.first;
var superMethodInvocation = SuperMethodInvocation.all.first;
var classInstanceCreation = ClassInstanceCreation.all.first;
var importDeclaration = ImportDeclaration.all.first;
var synchronizedStatement = SynchronizedStatement.all.first;
var iJavaModel = IJavaModel.all.first;
var block = Block.all.first;
var iCompilationUnit = ICompilationUnit.all.first;
var assertStatement = AssertStatement.all.first;
var simpleName = SimpleName.all.first;
var iType = IType.all.first;
var returnStatement = ReturnStatement.all.first;
var doStatement = DoStatement.all.first;
var expressionStatement = ExpressionStatement.all.first;
var prefixExpression = PrefixExpression.all.first;
var memberRef = MemberRef.all.first;
var simpleType = SimpleType.all.first;
var typeDeclarationStatement = TypeDeclarationStatement.all.first;
var parenthesizedExpression = ParenthesizedExpression.all.first;
var postfixExpression = PostfixExpression.all.first;
var emptyStatement = EmptyStatement.all.first;
var constructorInvocation = ConstructorInvocation.all.first;
var singleMemberAnnotation = SingleMemberAnnotation.all.first;
var enhancedForStatement = EnhancedForStatement.all.first;
var iJavaProject = IJavaProject.all.first;
var enumDeclaration = EnumDeclaration.all.first;
var catchClause = CatchClause.all.first;
var binaryPackageFragmentRoot = BinaryPackageFragmentRoot.all.first;
var enumConstantDeclaration = EnumConstantDeclaration.all.first;
