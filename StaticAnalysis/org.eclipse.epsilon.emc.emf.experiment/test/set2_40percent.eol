model Core driver EMF {nsuri = "org.amma.dsl.jdt.core"};
model DOM driver EMF {nsuri = "org.amma.dsl.jdt.dom"};
model PrimitiveTypes driver EMF {nsuri = "org.amma.dsl.jdt.primitiveTypes"};

var prefixExpression = PrefixExpression.all.first;
var iJavaProject = IJavaProject.all.first;
var arrayInitializer = ArrayInitializer.all.first;
var forStatement = ForStatement.all.first;
var enhancedForStatement = EnhancedForStatement.all.first;
var arrayType = ArrayType.all.first;
var conditionalExpression = ConditionalExpression.all.first;
var sourcePackageFragmentRoot = SourcePackageFragmentRoot.all.first;
var methodDeclaration = MethodDeclaration.all.first;
var fieldAccess = FieldAccess.all.first;
var infixExpression = InfixExpression.all.first;
var compilationUnit = CompilationUnit.all.first;
var javadoc = Javadoc.all.first;
var assignment = Assignment.all.first;
var initializer = Initializer.all.first;
var parenthesizedExpression = ParenthesizedExpression.all.first;
var typeLiteral = TypeLiteral.all.first;
var ifStatement = IfStatement.all.first;
var classInstanceCreation = ClassInstanceCreation.all.first;
var tagElement = TagElement.all.first;
var methodInvocation = MethodInvocation.all.first;
var parameter = Parameter.all.first;
var typeDeclaration = TypeDeclaration.all.first;
var modifier = Modifier.all.first;
var packageDeclaration = PackageDeclaration.all.first;
var thisExpression = ThisExpression.all.first;
var continueStatement = ContinueStatement.all.first;
var singleMemberAnnotation = SingleMemberAnnotation.all.first;
var block = Block.all.first;
var markerAnnotation = MarkerAnnotation.all.first;
var qualifiedName = QualifiedName.all.first;
var simpleType = SimpleType.all.first;
var throwStatement = ThrowStatement.all.first;
var nullLiteral = NullLiteral.all.first;
var breakStatement = BreakStatement.all.first;
var characterLiteral = CharacterLiteral.all.first;
var iType = IType.all.first;
var superMethodInvocation = SuperMethodInvocation.all.first;
var arrayCreation = ArrayCreation.all.first;
var doStatement = DoStatement.all.first;
var constructorInvocation = ConstructorInvocation.all.first;
var iPackageFragment = IPackageFragment.all.first;
var enumDeclaration = EnumDeclaration.all.first;
var enumConstantDeclaration = EnumConstantDeclaration.all.first;
var assertStatement = AssertStatement.all.first;
var anonymousClassDeclaration = AnonymousClassDeclaration.all.first;
var wildcardType = WildcardType.all.first;
var binaryPackageFragmentRoot = BinaryPackageFragmentRoot.all.first;
var iJavaModel = IJavaModel.all.first;
var labeledStatement = LabeledStatement.all.first;
var typeDeclarationStatement = TypeDeclarationStatement.all.first;
var typeParameter = TypeParameter.all.first;