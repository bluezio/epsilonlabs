model Core driver EMF {nsuri = "org.amma.dsl.jdt.core"};
model DOM driver EMF {nsuri = "org.amma.dsl.jdt.dom"};
model PrimitiveTypes driver EMF {nsuri = "org.amma.dsl.jdt.primitiveTypes"};

var whileStatement = WhileStatement.all.first().println();
var qualifiedName = QualifiedName.all.first();
var nullLiteral = NullLiteral.all.first();
var anonymousClassDeclaration = AnonymousClassDeclaration.all.first();
var catchClause = CatchClause.all.first();
var typeLiteral = TypeLiteral.all.first();
var conditionalExpression = ConditionalExpression.all.first();
var variableDeclarationExpression = VariableDeclarationExpression.all.first();
var textElement = TextElement.all.first();
var typeDeclaration = TypeDeclaration.all.first();
var assertStatement = AssertStatement.all.first();
var thisExpression = ThisExpression.all.first();
var iJavaModel = IJavaModel.all.first();
var iInitializer = IInitializer.all.first();
var methodRef = MethodRef.all.first();
var expressionStatement = ExpressionStatement.all.first();
var packageDeclaration = PackageDeclaration.all.first();
var iType = IType.all.first();
var superConstructorInvocation = SuperConstructorInvocation.all.first();
var typeParameter = TypeParameter.all.first();
var simpleName = SimpleName.all.first();
var instanceofExpression = InstanceofExpression.all.first();
var singleMemberAnnotation = SingleMemberAnnotation.all.first();
var forStatement = ForStatement.all.first();
var markerAnnotation = MarkerAnnotation.all.first();
var iPackageFragment = IPackageFragment.all.first();
var iCompilationUnit = ICompilationUnit.all.first();
var returnStatement = ReturnStatement.all.first();
var switchStatement = SwitchStatement.all.first();
var parenthesizedExpression = ParenthesizedExpression.all.first();
var continueStatement = ContinueStatement.all.first();
var importDeclaration = ImportDeclaration.all.first();
var fieldAccess = FieldAccess.all.first();
var initializer = Initializer.all.first();
var switchCase = SwitchCase.all.first();
var singleVariableDeclaration = SingleVariableDeclaration.all.first();
var arrayCreation = ArrayCreation.all.first();
var iJavaProject = IJavaProject.all.first();
var enumDeclaration = EnumDeclaration.all.first();
var wildcardType = WildcardType.all.first();
var parameterizedType = ParameterizedType.all.first();
var constructorInvocation = ConstructorInvocation.all.first();
var enhancedForStatement = EnhancedForStatement.all.first();
var labeledStatement = LabeledStatement.all.first();
var synchronizedStatement = SynchronizedStatement.all.first();
var binaryPackageFragmentRoot = BinaryPackageFragmentRoot.all.first();
var enumConstantDeclaration = EnumConstantDeclaration.all.first();
var typeDeclarationStatement = TypeDeclarationStatement.all.first();
var sourcePackageFragmentRoot = SourcePackageFragmentRoot.all.first();
var emptyStatement = EmptyStatement.all.first();