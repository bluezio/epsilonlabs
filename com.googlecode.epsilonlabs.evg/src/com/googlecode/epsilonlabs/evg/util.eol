operation GenPackage getModelPackageName() {
	var package = "";
	if (self.basePackage.isDefined()) { 
		package = self.basePackage + "."; 
	}
	package = package + self.ecorePackage.name;
	if (self.interfacePackageSuffix.isDefined()) {
		package = package + "." + self.interfacePackageSuffix;
	}
	return package;
}

operation GenPackage getPackageName() {
	return self.getModelPackageName() + ".visitor";
}

operation GenPackage getPackagePath() {
	return self.getPackageName().replace("\\.", "/");
}

operation GenClass getPackageName() {
	return self.genPackage.getPackageName();
}

operation GenClass getPackagePath() {
	return self.genPackage.getPackagePath();
}

operation String escape() {
	
	var keywords = Sequence{"abstract", "assert", "boolean",
		"break", "byte", "case", "catch", "char", "class", 
		"const", "continue", "default", "do", "double", "else",
		"enum", "extends", "final", "finally", "float", "for",
		"goto", "if", "implements", "import", "instanceof",
		"int", "interface", "long", "native", "new", "package",
		"private", "protected", "public", "return", "short",
		"static", "strictfp", "super", "switch", "synchronized",
		"this", "throw", "throws", "transient", "try", "void",
		"volatile", "while", "null", "true", "false"};
		
		if (keywords.includes(self)) {
			return "_" + self;
		}
		else {
			return self;
		}
	
}